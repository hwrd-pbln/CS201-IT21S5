import java.util.ArrayList;
import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private String category;

    public Book(String title, String author, String category) {
        this.title = title;
        this.author = author;
        this.category = category;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getCategory() {
        return category;
    }

    @Override
    public String toString() {
        return "Title: " + title + ", Author: " + author + ", Category: " + category;
    }
}

public class LibraryManagementSystem {
    private static ArrayList<Book> books = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            printHeader();
            printMenu();

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    addBook();
                    break;
                case 2:
                    removeBook();
                    break;
                case 3:
                    searchBookByIndexOrTitleOrAuthor();
                    break;
                case 4:
                    viewBooks();
                    break;
                case 5:
                    displayTotalBooks();
                    break;
                case 6:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
                    break;
            }

            System.out.println(); // Add a blank line between operations
        }
    }

    private static void printHeader() {
        System.out.println("***************************************");
        System.out.println("       LIBRARY MANAGEMENT SYSTEM");
        System.out.println("      _____   _____   _____");
        System.out.println("     |       | |       | |       |");
        System.out.println("     | BOOK  | | BOOK  | | BOOK  |");
        System.out.println("     |_______| |_______| |_______|");
        System.out.println("     |_______| |_______| |_______|");
        System.out.println();
    System.out.println("***************************************");
    }

    private static void printMenu() {
        System.out.println(" Menu:");
        System.out.println("***************************************");
        System.out.println("1. Add Book");
        System.out.println("2. Remove Book");
        System.out.println("3. Search Book by Index, Title, or Author");
        System.out.println("4. View Books");
        System.out.println("5. Display Total Number of Books");
        System.out.println("6. Exit");
        System.out.println("***************************************");
        System.out.print("Choose an option: ");
    }

    private static void addBook() {
        while (true) {
        	System.out.println("=========================================");
            System.out.println("Add new book to the library.");
            System.out.println("-----------------------------------------");
            System.out.print("Book title: ");
            String title = scanner.nextLine();

            System.out.print("Author: ");
            String author = scanner.nextLine();

            System.out.print("Category: ");
            String category = scanner.nextLine(); // Added category input
            
            books.add(new Book(title, author, category));
            System.out.println("Book added!");

            System.out.print("Do you want to add another book? (yes/no): ");
            String response = scanner.nextLine().toLowerCase();
            if (!response.equals("yes")) {
                break;
            }

            System.out.println(); // Add a blank line after adding a book
        }
    }

    private static void removeBook() {
        if (books.isEmpty()) {
            System.out.println("No books to remove.");
            System.out.println(); // Add a blank line after showing the message
            return;
        }

        viewBooks();

        System.out.print("Enter index of book to remove: ");
        int index = scanner.nextInt() - 1;
        scanner.nextLine(); // Consume newline

        if (index >= 0 && index < books.size()) {
            books.remove(index);
            System.out.println("Book removed.");
        } else {
            System.out.println("Invalid index.");
        }

        System.out.println(); // Add a blank line after removing a book
    }

    private static void searchBookByIndexOrTitleOrAuthor() {
        if (books.isEmpty()) {
            System.out.println("No books available to search.");
            System.out.println(); // Add a blank line after showing the message
            return;
        }

        System.out.println("Search for a Book");
        System.out.println("-------------------");
        System.out.println("1. Search by Index");
        System.out.println("2. Search by Title");
        System.out.println("3. Search by Author");
        System.out.println("4. Cancel");
        System.out.print("Choose an option: ");
        
        int searchChoice = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        switch (searchChoice) {
            case 1:
                searchBookByIndex();
                break;
            case 2:
                searchBookByTitle();
                break;
            case 3:
                searchBookByAuthor();
                break;
            case 4:
                System.out.println("Search cancelled.");
                System.out.println(); // Add a blank line for spacing
                break;
            default:
                System.out.println("Invalid option. Please try again.");
                System.out.println(); // Add a blank line for spacing
                break;
        }
    }

    private static void searchBookByIndex() {
        viewBooks();
        System.out.print("Enter the index of the book to search (or enter 0 to cancel): ");
        
        if (!scanner.hasNextInt()) {
            System.out.println("Invalid input. Please enter a valid integer.");
            scanner.nextLine(); // Clear the invalid input
            System.out.println(); // Add a blank line for spacing
            return;
        }

        int index = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        if (index == 0) {
            System.out.println("Search cancelled.");
            System.out.println(); // Add a blank line for spacing
            return;
        }

        index -= 1;

        if (index >= 0 && index < books.size()) {
            Book book = books.get(index);
            System.out.println();
            System.out.println("Book found:");
            System.out.println("-------------");
            System.out.println("Title   : " + book.getTitle());
            System.out.println("Author  : " + book.getAuthor());
            System.out.println("Category: " + book.getCategory());
            System.out.println("-------------");
            System.out.println(); // Add a blank line after displaying the book details
        } else {
            System.out.println("Invalid index. Please enter a number between 1 and " + books.size() + ".");
            System.out.println(); // Add a blank line for spacing
        }
    }

    private static void searchBookByTitle() {
        System.out.print("Enter the title of the book to search: ");
        String title = scanner.nextLine();
        
        boolean found = false;
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                System.out.println();
                System.out.println("Book found:");
                System.out.println("-------------");
                System.out.println("Title   : " + book.getTitle());
                System.out.println("Author  : " + book.getAuthor());
                System.out.println("Category: " + book.getCategory());
                System.out.println("-------------");
                System.out.println(); // Add a blank line after displaying the book details
                found = true;
                break;
            }
        }
        
        if (!found) {
            System.out.println("No book found with the title \"" + title + "\".");
            System.out.println(); // Add a blank line for spacing
        }
    }

    private static void searchBookByAuthor() {
        System.out.print("Enter the author of the book to search: ");
        String author = scanner.nextLine();
        
        boolean found = false;
        for (Book book : books) {
            if (book.getAuthor().equalsIgnoreCase(author)) {
                System.out.println();
                System.out.println("Book found:");
                System.out.println("-------------");
                System.out.println("Title   : " + book.getTitle());
                System.out.println("Author  : " + book.getAuthor());
                System.out.println("Category: " + book.getCategory());
                System.out.println("-------------");
                System.out.println(); // Add a blank line after displaying the book details
                found = true;
                break;
            }
        }
        
        if (!found) {
            System.out.println("No book found by the author \"" + author + "\".");
            System.out.println(); // Add a blank line for spacing
        }
    }

    private static void viewBooks() {
        if (books.isEmpty()) {
            System.out.println("No books available.");
            System.out.println(); // Add a blank line after showing the message
            return;
        }

        int maxIndexLength = "Index".length();
        int maxTitleLength = "Title".length();
        int maxAuthorLength = "Author".length();
        int maxCategoryLength = "Category".length();

        for (int i = 0; i < books.size(); i++) {
            maxIndexLength = Math.max(maxIndexLength, Integer.toString(i + 1).length());
            Book book = books.get(i);
            maxTitleLength = Math.max(maxTitleLength, book.getTitle().length());
            maxAuthorLength = Math.max(maxAuthorLength, book.getAuthor().length());
            maxCategoryLength = Math.max(maxCategoryLength, book.getCategory().length());
        }

        maxIndexLength += 2;
        maxTitleLength += 2;
        maxAuthorLength += 2;
        maxCategoryLength += 2;

        printLine(maxIndexLength + maxTitleLength + maxAuthorLength + maxCategoryLength + 13, '-');
        System.out.printf("| %-"+ maxIndexLength + "s | %-"+ maxTitleLength + "s | %-"+ maxAuthorLength + "s | %-"+ maxCategoryLength + "s |\n", "Index", "Title", "Author", "Category");
        printLine(maxIndexLength + maxTitleLength + maxAuthorLength + maxCategoryLength + 13, '-');

        for (int i = 0; i < books.size(); i++) {
            Book book = books.get(i);
            System.out.printf("| %-"+ maxIndexLength + "d | %-"+ maxTitleLength + "s | %-"+ maxAuthorLength + "s | %-"+ maxCategoryLength + "s |\n", i + 1, book.getTitle(), book.getAuthor(), book.getCategory());
        }

        printLine(maxIndexLength + maxTitleLength + maxAuthorLength + maxCategoryLength + 13, '-');
        System.out.println(); // Add a blank line after viewing books
    }

    private static void printLine(int length, char ch) {
        for (int i = 0; i < length; i++) {
            System.out.print(ch);
        }
        System.out.println();
    }

    private static void displayTotalBooks() {
        System.out.println("---------------------------------------------");
        System.out.println("           Total Number of Books");
        System.out.println("---------------------------------------------");

        if (books.isEmpty()) {
            System.out.println("There are currently no books in the library.");
        } else {
            System.out.println("The library currently has " + books.size() + (books.size() == 1 ? " book." : " books."));
        }

        System.out.println("---------------------------------------------");
        System.out.println(); // Add a blank line for spacing

        System.out.print("Press Enter to return to the main menu...");
        scanner.nextLine(); // Wait for user input before returning to the main menu
    }
}
